{
    "name": "Noir",
    "scopeName": "source.noir",
    "patterns": [
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#comments"
        },
        {
            "include": "#numbers"
        },
        {
            "include": "#types"
        },
        {
            "include": "#delimiters"
        },
        {
            "include": "#functions"
        }
    ],
    "repository": {
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.noir",
                    "match": "\\b(if|else|for|in|to|print)\\b"
                },
                {
                    "name": "keyword.other.func.noir",
                    "match": "\\b(func)\\b"
                }
            ]
        },
        "strings": {
            "name": "string.quoted.double.noir",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.noir",
                    "match": "\\\\."
                }
            ]
        },
        "comments": {
            "name": "comment.line.double-slash.noir",
            "match": "//.*$"
        },
        "numbers": {
            "patterns": [
                {
                    "name": "constant.numeric.integer.noir",
                    "match": "\\b\\d+\\b"
                },
                {
                    "name": "constant.numeric.float.noir",
                    "match": "\\b\\d+\\.\\d+\\b"
                }
            ]
        },
        "types": {
            "patterns": [
                {
                    "name": "storage.type.noir",
                    "match": "\\b(Int|Float|String|Bool)\\b"
                }
            ]
        },
        "delimiters": {
            "patterns": [
                {
                    "name": "punctuation.delimiter.function.noir",
                    "match": "::"
                }
            ]
        },
        "functions": {
            "patterns": [
                {
                    "name": "entity.name.function.noir",
                    "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(?=\\()"
                },
                {
                    "name": "entity.name.function.definition.noir",
                    "match": "(?<=func\\s+)([a-zA-Z_][a-zA-Z0-9_]*)"
                }
            ]
        }
    }
}